/* generated by Poly vX.Y.Z */
import {
	PolyComponent,
	comment,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "poly/internal";

function create_fragment(ctx) {
	let div0;
	let t1;
	let c;
	let t2;
	let div1;

	return {
		c() {
			div0 = element("div");
			div0.textContent = "content";
			t1 = space();
			c = comment(" comment ");
			t2 = space();
			div1 = element("div");
			div1.textContent = "more content";
		},
		m(target, anchor) {
			insert(target, div0, anchor);
			insert(target, t1, anchor);
			insert(target, c, anchor);
			insert(target, t2, anchor);
			insert(target, div1, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(div0);
				detach(t1);
				detach(c);
				detach(t2);
				detach(div1);
			}
		}
	};
}

class Component extends PolyComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;